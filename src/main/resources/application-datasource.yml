# 配置数据源
spring:
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      # Mysql
      url: jdbc:mysql://127.0.0.1:3306/my_test_sql?useUnicode=true&autoReconnect=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
      username: root
      password: root
      initialSize: 1
      minIdle: 3
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,slf4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

mybatis-plus:
    #搜索指定包别名 多个package用逗号或者分号分隔
    type-aliases-package: com.qsn.bootstrap.modules.entity
    #配置mapper的扫描，找到所有的mapper.xml映射文件
    mapper-locations: classpath*:mapper/*.xml
    #项目启动会检查xml配置存在(只在开发时候打开)
    check-config-location: false
    # mybatis 的原生配置
    configuration:
        # 这个配置使全局的映射器启用或禁用缓存; 须要在Mapper文件里也指定 cache 标签才会真正使用缓存
        cache-enabled : false
        # 查询结果中包含空值的列： true返回null; false不返回该字段;（需要 mybatis jar包3.2.0以上的版本才支持）: 暂时不生效，不知具体原因
        call-setters-on-nulls: true
        # 在执行添加记录之后可以获取到数据库自动生成的主键ID; 若没有此配置， 在xml里面自行配置[useGeneratedKeys="true"]也可以, 但是 keyProperty="id"  keyColumn="id" 一定要写
        use-generated-keys: true
        # 打印执行的sql详细信息， 调试用; StdOutImpl只在控制台输出（system.out.println("xxx")），而Slf4jImpl是输出到log日志文件上的(log.info("xxx"))
        # 大家如果想在log日志上打印sql，就不要去配置 StdOutImpl实现类了。
#        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
